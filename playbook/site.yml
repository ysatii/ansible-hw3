---
- name: Install Clickhouse
  hosts: clickhouse
  become: true
  vars:
    clickhouse_version: "23.8.2.7"
    download_dir: "/home/{{ ansible_user }}/clickhouse"

  tasks:
    - name: Ensure ClickHouse download directory exists
      file:
        path: "{{ download_dir }}"
        state: directory
        mode: "0755"

    - name: Get ClickHouse RPM packages
      get_url:
        url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.x86_64.rpm"
        dest: "{{ download_dir }}/{{ item }}-{{ clickhouse_version }}.rpm"
        mode: "0644"
      with_items:
        - clickhouse-client
        - clickhouse-server
        - clickhouse-common-static

    - name: Install ClickHouse packages
      yum:
        name:
          - "{{ download_dir }}/clickhouse-client-{{ clickhouse_version }}.rpm"
          - "{{ download_dir }}/clickhouse-server-{{ clickhouse_version }}.rpm"
          - "{{ download_dir }}/clickhouse-common-static-{{ clickhouse_version }}.rpm"
        state: present

    - name: Copy ClickHouse configuration file
      template:
        src: config.xml.j2
        dest: /etc/clickhouse-server/config.xml
        owner: clickhouse
        group: clickhouse
        mode: '0644'
      notify: Restart ClickHouse

    - name: Enable read-write mode in ClickHouse
      ansible.builtin.lineinfile:
        path: /etc/clickhouse-server/users.xml
        regexp: '<readonly>.*</readonly>'
        line: '        <readonly>0</readonly>'
      become: yes
      notify: Restart ClickHouse

    - name: Ensure ClickHouse service is enabled and started
      systemd:
        name: clickhouse-server
        enabled: true
        state: started

    - name: Create ClickHouse database
      shell: "clickhouse-client -q 'CREATE DATABASE IF NOT EXISTS logs;'"
      register: create_db_result
      changed_when: false

    - name: Show ClickHouse database creation result
      debug:
        var: create_db_result.stdout_lines

    - name: Create and populate ClickHouse table
      shell: |
        clickhouse-client --query="CREATE TABLE IF NOT EXISTS test_table (id UInt32, name String) ENGINE = Log";
        clickhouse-client --query="INSERT INTO test_table VALUES (1, 'Test')"
      become: yes



  handlers:
    - name: Restart ClickHouse
      systemd:
        name: clickhouse-server
        state: restarted





- name: Install and configure Vector
  hosts: vector
  become: true
  roles:
    - vector

- name: Install and configure LightHouse
  hosts: lighthouse
  become: true
  roles:
    - lighthouse

- name: Check ClickHouse availability and show Lighthouse URL
  hosts: lighthouse-03
  gather_facts: yes
  tasks:
    - name: Check ClickHouse availability
      uri:
        url: "http://{{ hostvars['lighthouse-03'].ansible_host }}?user=default"
        return_content: yes
      register: clickhouse_response
      ignore_errors: yes

    - name: Show Lighthouse URL if ClickHouse is available
      debug:
        msg: "Lighthouse is available at: http://{{ hostvars['lighthouse-03'].ansible_host }}?user=default#http://{{ hostvars['clickhouse-01'].ansible_host }}:8123/"
      when: clickhouse_response.status == 200